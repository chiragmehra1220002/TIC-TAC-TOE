{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\REACT JS TASKS\\\\tic-tac-toe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Board from \"./Board\";\nimport Square from \"./Square\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSquares = () => new Array(9).fill(null); //? returns an new array intialized with null values\nconst lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // ? Winning combinations containing array indices\n\nfunction App() {\n  _s();\n  const [squares, setValue] = useState(defaultSquares());\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    const isComputerTurn = squares.filter(square => square !== null).length % 2 === 1;\n    const linesThatAre = (a, b, c) => {\n      return lines.filter(squareIndexes => {\n        const squareValues = squareIndexes.map(index => squares[index]);\n        return JSON.stringify([a, b, c].sort()) === JSON.stringify(squareValues.sort());\n      });\n    };\n    const emptyIndexes = squares.map((square, index) => square === null ? index : null).filter(val => val !== null);\n    const playerWon = linesThatAre('x', 'x', 'x').length > 0;\n    const computerWon = linesThatAre('o', 'o', 'o').length > 0;\n    if (playerWon) {\n      setWinner('x');\n    } else if (computerWon) {\n      setWinner('o');\n    }\n    const putComputerAt = index => {\n      let newSquares = squares;\n      newSquares[index] = 'o';\n      setValue([...newSquares]);\n    };\n    if (isComputerTurn) {\n      const winingLines = linesThatAre('o', 'o', null);\n      if (winingLines.length > 0) {\n        const winIndex = winingLines[0].filter(index => squares[index] === null)[0];\n        putComputerAt(winIndex);\n        return;\n      }\n      const linesToBlock = linesThatAre('x', 'x', null);\n      if (linesToBlock.length > 0) {\n        const blockIndex = linesToBlock[0].filter(index => squares[index] === null)[0];\n        putComputerAt(blockIndex);\n        return;\n      }\n      const linesToContinue = linesThatAre('0', null, null);\n      if (linesToContinue.length > 0) {\n        putComputerAt(linesToContinue[0].filter(index => squares[index] === null)[0]);\n        return;\n      }\n      const randomIndex = emptyIndexes[Math.ceil(Math.random() * emptyIndexes.length)];\n      putComputerAt(randomIndex);\n    }\n  }, [squares]);\n  const handleSquareClick = index => {\n    const isPlayerTurn = squares.filter(square => square !== null).length % 2 === 0;\n    if (isPlayerTurn) {\n      let newSquares = squares;\n      newSquares[index] = 'x';\n      setValue([...newSquares]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(Square, {\n        x: square === 'x' ? 1 : 0,\n        o: square === 'o' ? 1 : 0,\n        onClick: () => handleSquareClick(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !!winner && winner === 'o' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result red\",\n      children: \" YOU LOST !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LXRGBPFHEVGkbMiGVM8IH0uNCk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","Square","useState","useEffect","jsxDEV","_jsxDEV","defaultSquares","Array","fill","lines","App","_s","squares","setValue","winner","setWinner","isComputerTurn","filter","square","length","linesThatAre","a","b","c","squareIndexes","squareValues","map","index","JSON","stringify","sort","emptyIndexes","val","playerWon","computerWon","putComputerAt","newSquares","winingLines","winIndex","linesToBlock","blockIndex","linesToContinue","randomIndex","Math","ceil","random","handleSquareClick","isPlayerTurn","children","x","o","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/REACT JS TASKS/tic-tac-toe/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Board from \"./Board\";\nimport Square from \"./Square\";\nimport {useState,useEffect} from 'react';\n\nconst defaultSquares = () => (new Array(9).fill(null)); //? returns an new array intialized with null values\nconst lines = [[0,1,2],[3,4,5],[6,7,8],\n[0,3,6],[1,4,7],[2,5,8]\n,[0,4,8],[2,4,6]];// ? Winning combinations containing array indices\n\n\n\nfunction App() {\n  const [squares,setValue] = useState(defaultSquares());\n  const [winner,setWinner] = useState(null);\n  useEffect(() => {\n    const isComputerTurn = squares.filter(square => square !== null).length % 2 === 1;\n    const linesThatAre = (a,b,c) => {\n      return lines.filter(squareIndexes => {\n        const squareValues =squareIndexes.map(index => squares[index]);\n        return JSON.stringify([a,b,c].sort()) === JSON.stringify(squareValues.sort());\n  });\n};\nconst emptyIndexes = squares.map((square,index) => square === null ? index : null).filter(val => val !==null);\nconst playerWon = linesThatAre('x','x','x').length > 0;\nconst computerWon = linesThatAre('o','o','o').length>0;\nif(playerWon)\n{\n  setWinner('x');\n}\nelse if(computerWon)\n{\n  setWinner('o');\n}\nconst putComputerAt = index => {\n  let newSquares = squares;\n  newSquares[index] = 'o';\n  setValue([...newSquares]);\n\n};\nif (isComputerTurn){\n  const winingLines = linesThatAre('o','o',null);\n  if(winingLines.length > 0 ){\n    const winIndex = winingLines[0].filter(index => squares[index] === null)[0];\n    putComputerAt(winIndex);\n    return;\n  }\n  const linesToBlock = linesThatAre('x','x',null);\n  if(linesToBlock.length>0){\n    const blockIndex = linesToBlock[0].filter(index => squares[index] === null)[0];\n    putComputerAt(blockIndex);\n    return;\n  }\n  const linesToContinue = linesThatAre('0',null,null);\n  if(linesToContinue.length>0){\n    putComputerAt(linesToContinue[0].filter(index => squares[index] === null)[0]);\n    return;\n  }\n  const randomIndex = emptyIndexes[Math.ceil(Math.random()*emptyIndexes.length)];\n  putComputerAt(randomIndex);\n\n}\n},[squares]);\nconst handleSquareClick = index => {\n  const isPlayerTurn = squares.filter(square => square !== null).length % 2 === 0;\n  if(isPlayerTurn){\n    let newSquares = squares;\n    newSquares[index] = 'x';\n    setValue([...newSquares]);\n  }\n}\n  return (\n    <main>\n      <Board>\n        {squares.map((square,index) =>\n        <Square\n          x={square === 'x'?1:0}\n          o={square === 'o'?1:0}\n          onClick ={() =>handleSquareClick(index)}/>\n          )}\n      </Board>\n      {!!winner && winner === 'o' && (\n        <div className=\"result red\"> YOU LOST !!!</div>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,cAAc,GAAGA,CAAA,KAAO,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE,CAAC,CAAC;AACxD,MAAMC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACtC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACtB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;;AAIlB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;EACrD,MAAM,CAACQ,MAAM,EAACC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACzCC,SAAS,CAAC,MAAM;IACd,MAAMa,cAAc,GAAGJ,OAAO,CAACK,MAAM,CAACC,MAAM,IAAIA,MAAM,KAAK,IAAI,CAAC,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC;IACjF,MAAMC,YAAY,GAAGA,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,KAAK;MAC9B,OAAOd,KAAK,CAACQ,MAAM,CAACO,aAAa,IAAI;QACnC,MAAMC,YAAY,GAAED,aAAa,CAACE,GAAG,CAACC,KAAK,IAAIf,OAAO,CAACe,KAAK,CAAC,CAAC;QAC9D,OAAOC,IAAI,CAACC,SAAS,CAAC,CAACR,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,CAACO,IAAI,CAAC,CAAC,CAAC,KAAKF,IAAI,CAACC,SAAS,CAACJ,YAAY,CAACK,IAAI,CAAC,CAAC,CAAC;MACnF,CAAC,CAAC;IACJ,CAAC;IACD,MAAMC,YAAY,GAAGnB,OAAO,CAACc,GAAG,CAAC,CAACR,MAAM,EAACS,KAAK,KAAKT,MAAM,KAAK,IAAI,GAAGS,KAAK,GAAG,IAAI,CAAC,CAACV,MAAM,CAACe,GAAG,IAAIA,GAAG,KAAI,IAAI,CAAC;IAC7G,MAAMC,SAAS,GAAGb,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAACD,MAAM,GAAG,CAAC;IACtD,MAAMe,WAAW,GAAGd,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAACD,MAAM,GAAC,CAAC;IACtD,IAAGc,SAAS,EACZ;MACElB,SAAS,CAAC,GAAG,CAAC;IAChB,CAAC,MACI,IAAGmB,WAAW,EACnB;MACEnB,SAAS,CAAC,GAAG,CAAC;IAChB;IACA,MAAMoB,aAAa,GAAGR,KAAK,IAAI;MAC7B,IAAIS,UAAU,GAAGxB,OAAO;MACxBwB,UAAU,CAACT,KAAK,CAAC,GAAG,GAAG;MACvBd,QAAQ,CAAC,CAAC,GAAGuB,UAAU,CAAC,CAAC;IAE3B,CAAC;IACD,IAAIpB,cAAc,EAAC;MACjB,MAAMqB,WAAW,GAAGjB,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAAC;MAC9C,IAAGiB,WAAW,CAAClB,MAAM,GAAG,CAAC,EAAE;QACzB,MAAMmB,QAAQ,GAAGD,WAAW,CAAC,CAAC,CAAC,CAACpB,MAAM,CAACU,KAAK,IAAIf,OAAO,CAACe,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3EQ,aAAa,CAACG,QAAQ,CAAC;QACvB;MACF;MACA,MAAMC,YAAY,GAAGnB,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAAC;MAC/C,IAAGmB,YAAY,CAACpB,MAAM,GAAC,CAAC,EAAC;QACvB,MAAMqB,UAAU,GAAGD,YAAY,CAAC,CAAC,CAAC,CAACtB,MAAM,CAACU,KAAK,IAAIf,OAAO,CAACe,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9EQ,aAAa,CAACK,UAAU,CAAC;QACzB;MACF;MACA,MAAMC,eAAe,GAAGrB,YAAY,CAAC,GAAG,EAAC,IAAI,EAAC,IAAI,CAAC;MACnD,IAAGqB,eAAe,CAACtB,MAAM,GAAC,CAAC,EAAC;QAC1BgB,aAAa,CAACM,eAAe,CAAC,CAAC,CAAC,CAACxB,MAAM,CAACU,KAAK,IAAIf,OAAO,CAACe,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E;MACF;MACA,MAAMe,WAAW,GAAGX,YAAY,CAACY,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAACd,YAAY,CAACZ,MAAM,CAAC,CAAC;MAC9EgB,aAAa,CAACO,WAAW,CAAC;IAE5B;EACA,CAAC,EAAC,CAAC9B,OAAO,CAAC,CAAC;EACZ,MAAMkC,iBAAiB,GAAGnB,KAAK,IAAI;IACjC,MAAMoB,YAAY,GAAGnC,OAAO,CAACK,MAAM,CAACC,MAAM,IAAIA,MAAM,KAAK,IAAI,CAAC,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC;IAC/E,IAAG4B,YAAY,EAAC;MACd,IAAIX,UAAU,GAAGxB,OAAO;MACxBwB,UAAU,CAACT,KAAK,CAAC,GAAG,GAAG;MACvBd,QAAQ,CAAC,CAAC,GAAGuB,UAAU,CAAC,CAAC;IAC3B;EACF,CAAC;EACC,oBACE/B,OAAA;IAAA2C,QAAA,gBACE3C,OAAA,CAACL,KAAK;MAAAgD,QAAA,EACHpC,OAAO,CAACc,GAAG,CAAC,CAACR,MAAM,EAACS,KAAK,kBAC1BtB,OAAA,CAACJ,MAAM;QACLgD,CAAC,EAAE/B,MAAM,KAAK,GAAG,GAAC,CAAC,GAAC,CAAE;QACtBgC,CAAC,EAAEhC,MAAM,KAAK,GAAG,GAAC,CAAC,GAAC,CAAE;QACtBiC,OAAO,EAAGA,CAAA,KAAKL,iBAAiB,CAACnB,KAAK;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACP,CAAC,CAACzC,MAAM,IAAIA,MAAM,KAAK,GAAG,iBACzBT,OAAA;MAAKmD,SAAS,EAAC,YAAY;MAAAR,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC/C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAAC5C,EAAA,CA1EQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AA4EZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}