{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\REACT JS TASKS\\\\tic-tac-toe\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport 'global';\nimport Board from \"./Board\";\nimport Square from \"./Square\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSquares = () => new Array(9).fill(null); //? returns an new array intialized with null values\nconst lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; // ? Winning combinations containing array indices\n\nlet App = () => {\n  _s();\n  const [squares, setValue] = useState(defaultSquares());\n  const [winner, setWinner] = useState(null);\n  useEffect(() => {\n    const isComputerTurn = squares.filter(square => square !== null).length % 2 === 1;\n    const linesThatAre = (a, b, c) => {\n      return lines.filter(squareIndexes => {\n        const squareValues = squareIndexes.map(index => squares[index]);\n        return JSON.stringify([a, b, c].sort()) === JSON.stringify(squareValues.sort());\n      });\n    };\n    const emptyIndexes = squares.map((square, index) => square === null ? index : null).filter(val => val !== null);\n    const playerWon = linesThatAre('x', 'x', 'x').length > 0;\n    const computerWon = linesThatAre('o', 'o', 'o').length > 0;\n    if (playerWon) {\n      setWinner('x');\n    } else if (computerWon) {\n      setWinner('o');\n    } else if (squares.every(square => square !== null)) {\n      // Check if the board is full and no winner\n      setWinner('draw');\n    }\n    const putComputerAt = index => {\n      let newSquares = squares;\n      newSquares[index] = 'o';\n      setValue([...newSquares]);\n    };\n    if (isComputerTurn) {\n      const winingLines = linesThatAre('o', 'o', null);\n      if (winingLines.length > 0) {\n        const winIndex = winingLines[0].filter(index => squares[index] === null)[0];\n        putComputerAt(winIndex);\n        return;\n      }\n      const linesToBlock = linesThatAre('x', 'x', null);\n      if (linesToBlock.length > 0) {\n        const blockIndex = linesToBlock[0].filter(index => squares[index] === null)[0];\n        putComputerAt(blockIndex);\n        return;\n      }\n      const linesToContinue = linesThatAre('0', null, null);\n      if (linesToContinue.length > 0) {\n        putComputerAt(linesToContinue[0].filter(index => squares[index] === null)[0]);\n        return;\n      }\n      const randomIndex = emptyIndexes[Math.ceil(Math.random() * emptyIndexes.length)];\n      putComputerAt(randomIndex);\n    }\n  }, [squares]);\n  const handleSquareClick = index => {\n    const isPlayerTurn = squares.filter(square => square !== null).length % 2 === 0;\n    if (isPlayerTurn) {\n      let newSquares = squares;\n      newSquares[index] = 'x';\n      setValue([...newSquares]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      children: squares.map((square, index) => /*#__PURE__*/_jsxDEV(Square, {\n        x: square === 'x' ? 1 : 0,\n        o: square === 'o' ? 1 : 0,\n        onClick: () => handleSquareClick(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), !!winner && winner === 'o' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result red\",\n      children: \" YOU LOST  !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), !!winner && winner === 'x' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result green\",\n      children: \"YOU WON\\uD83D\\uDE0E\\uD83D\\uDE0E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LXRGBPFHEVGkbMiGVM8IH0uNCk8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Board","Square","useState","useEffect","jsxDEV","_jsxDEV","defaultSquares","Array","fill","lines","App","_s","squares","setValue","winner","setWinner","isComputerTurn","filter","square","length","linesThatAre","a","b","c","squareIndexes","squareValues","map","index","JSON","stringify","sort","emptyIndexes","val","playerWon","computerWon","every","putComputerAt","newSquares","winingLines","winIndex","linesToBlock","blockIndex","linesToContinue","randomIndex","Math","ceil","random","handleSquareClick","isPlayerTurn","children","x","o","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/REACT JS TASKS/tic-tac-toe/src/App.jsx"],"sourcesContent":["// import logo from './logo.svg';\r\nimport 'global'\r\nimport Board from \"./Board\";\r\nimport Square from \"./Square\";\r\nimport {useState,useEffect} from 'react';\r\n\r\nconst defaultSquares = () => (new Array(9).fill(null)); //? returns an new array intialized with null values\r\nconst lines = [[0,1,2],[3,4,5],[6,7,8],\r\n[0,3,6],[1,4,7],[2,5,8]\r\n,[0,4,8],[2,4,6]];// ? Winning combinations containing array indices\r\n\r\n\r\n\r\nlet App = () => {\r\n  const [squares,setValue] = useState(defaultSquares());\r\n  const [winner,setWinner] = useState(null);\r\n  useEffect(() => {\r\n    const isComputerTurn = squares.filter(square => square !== null).length % 2 === 1;\r\n    const linesThatAre = (a,b,c) => {\r\n      return lines.filter(squareIndexes => {\r\n        const squareValues =squareIndexes.map(index => squares[index]);\r\n        return JSON.stringify([a,b,c].sort()) === JSON.stringify(squareValues.sort());\r\n  });\r\n};\r\nconst emptyIndexes = squares.map((square,index) => square === null ? index : null).filter(val => val !==null);\r\nconst playerWon = linesThatAre('x','x','x').length > 0;\r\nconst computerWon = linesThatAre('o','o','o').length>0;\r\n\r\nif(playerWon)\r\n{\r\n  setWinner('x');\r\n}\r\nelse if(computerWon)\r\n{\r\n  setWinner('o');\r\n}\r\nelse if (squares.every(square => square !== null)) {\r\n  // Check if the board is full and no winner\r\n  setWinner('draw');\r\n}\r\nconst putComputerAt = index => {\r\n  let newSquares = squares;\r\n  newSquares[index] = 'o';\r\n  setValue([...newSquares]);\r\n\r\n};\r\nif (isComputerTurn){\r\n  const winingLines = linesThatAre('o','o',null);\r\n  if(winingLines.length > 0 ){\r\n    const winIndex = winingLines[0].filter(index => squares[index] === null)[0];\r\n    putComputerAt(winIndex);\r\n    return;\r\n  }\r\n  const linesToBlock = linesThatAre('x','x',null);\r\n  if(linesToBlock.length>0){\r\n    const blockIndex = linesToBlock[0].filter(index => squares[index] === null)[0];\r\n    putComputerAt(blockIndex);\r\n    return;\r\n  }\r\n  const linesToContinue = linesThatAre('0',null,null);\r\n  if(linesToContinue.length>0){\r\n    putComputerAt(linesToContinue[0].filter(index => squares[index] === null)[0]);\r\n    return;\r\n  }\r\n  const randomIndex = emptyIndexes[Math.ceil(Math.random()*emptyIndexes.length)];\r\n  putComputerAt(randomIndex);\r\n\r\n}\r\n},[squares]);\r\nconst handleSquareClick = index => {\r\n  const isPlayerTurn = squares.filter(square => square !== null).length % 2 === 0;\r\n  if(isPlayerTurn){\r\n    let newSquares = squares;\r\n    newSquares[index] = 'x';\r\n    setValue([...newSquares]);\r\n  }\r\n}\r\n  return (\r\n    <main>\r\n      <Board>\r\n        {squares.map((square,index) =>\r\n        <Square\r\n          x={square === 'x'?1:0}\r\n          o={square === 'o'?1:0}\r\n          onClick ={() =>handleSquareClick(index)}/>\r\n          )}\r\n      </Board>\r\n      {!!winner && winner === 'o' && (\r\n        <div className=\"result red\"> YOU LOST  !!!</div>\r\n      )}\r\n      {!!winner && winner === 'x' && (\r\n        <div className =\"result green\">YOU WONðŸ˜ŽðŸ˜Ž</div>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}